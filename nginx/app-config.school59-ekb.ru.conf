# HTTPS-сервер для app-config.school59-ekb.ru
server {
    listen 9443;
    listen [::]:9443;
    server_name app-config.school59-ekb.ru www.app-config.school59-ekb.ru;

    # Корневая директория и индексные файлы
    root /var/www/html;
    index index.php;

    ##
    # Настройки логов
    ##
    access_log /var/log/nginx/app-config.school59-ekb.ru.access.log;
    error_log /var/log/nginx/app-config.school59-ekb.ru.error.log;

    ##
    # Ограничение запросов
    ##
    limit_req zone=one burst=50 nodelay;
    limit_conn addr 20;

    ##
    # Проксирование API-запросов /api/
    ##
    location /api/ {
        ##
        # Если нет заголовка от Фронта откидываем запрос
        ##
        if ($http_frontend_key = "") {
            add_header Content-Type "application/json" always;
            add_header Cache-Control "no-store" always;
            return 403;
        }

        if ($http_frontend_key != "d-rGoanmj0kehHSsENpP") {
            add_header Content-Type "application/json" always;
            add_header Cache-Control "no-store" always;
            return 403
        }

        # Маршрутизация внутри /api/
        if ($request_uri ~ ^/api/config(/|$)) {
            rewrite ^/api/config(/.*)?$ $1 break;
            proxy_pass http://app-config-service:5000;
        }
        
        if ($request_uri ~ ^/api/flask(/|$)) {
            rewrite ^/api/flask(/.*)?$ $1 break;
            proxy_pass http://flask-app-pr1-service:5000;
        }
        
        if ($request_uri ~ ^/api/db(/|$)) {
            rewrite ^/api/db(/.*)?$ $1 break;
            proxy_pass http://database-connector-service:5000;
        }
        
        # Прямое обращение к /api/ без конкретного сервиса - 403
        if ($request_uri = /api/) {
            add_header Content-Type "application/json" always;
            add_header Cache-Control "no-store" always;
            return 403 
        }
        
        # Если не подходит ни под один из вышеперечисленных путей /api/
        add_header Content-Type "application/json" always;
        add_header Cache-Control "no-store" always;
        return 404
    }

    ##
    # Оптимизированная обработка статических файлов
    ##
    location ~* \.(jpg|jpeg|gif|png|webp|svg|woff|woff2|ttf|css|js|ico|xml)$ {
        access_log off;
        log_not_found off;
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
        add_header Pragma "no-cache";
        etag off;
        if_modified_since off;
        try_files $uri $uri/ =404;
    }

    ##
    # Обработка PHP через FastCGI
    ##
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 256 16k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_read_timeout 300;
        include fastcgi_params;

        # Заголовки безопасности
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
    }

    ##
    # Главный location - обработка всех остальных запросов (веб-сайт)
    ##
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    ##
    # Защита от доступа к скрытым файлам
    ##
    location ~ /\.(?!well-known).* {
        deny all;
        access_log off;
        log_not_found off;
    }

    ##
    # Запрет доступа к файлам
    ##
    location ~* (\.env|composer\.json|composer\.lock|\.git) {
        deny all;
        access_log off;
        log_not_found off;
    }

    ##
    # Обработка ошибок
    ##
    error_page 403 404 /err/404.html;
    error_page 500 502 503 504 /err/50x.html;

    # Отключение доступа к VCS директориям
    location ~ /\.(git|svn|hg) {
        deny all;
        access_log off;
        log_not_found off;
    }
}